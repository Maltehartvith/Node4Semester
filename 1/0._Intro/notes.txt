for loops are error prone and not functional. They are overly verbose, so in general we dont like for loops in js. 

You can send data with a get request in two ways
You can use path variable which is with a number = url: localhost:8080/beers/1
or use can use Query string = url: ?key=value&key2=value2 ex = /kangaroofacts?canKick=true
app.get("/kangaroofacts", (req, res) => {
    res.send(req.query);
});


npm -g install nodemon
nodemon helps you with building the project for each time you save the project, so you dont have to stop it and run it again.

As before where we got a static folder for the html files and css, with js we will call it public. 

Things that should be looked more into: variables such as let, var and const
Pretty code

When you have to set the id, it is better to set a variable that pluses. When you set fx AUTO_INCREMENT++ the next time you get the id it is
AUTO_INCREMENT'ed. if you do ++AUTO_INCREMENT it will increase at the call.

AUTO_INCREMENT 3:
AUTO_INCREMENT++ = 3
AUTO_INCREMENT = 4

or 
++AUTO_INCREMENT = 4
AUTO_INCREMENT = 4

parseInt vs Number
Number is hard specified to be a number, where parseInt you are "pleading" it to be a number, and with parsing int, you are specifying to be an 
integer but with number, it can be any type of number. 

node is a js runtime enviorment 


how to create a svelte project:
npx degit sveltejs/template folderName

for svelte, if you want more pages to change between, you can insert --single into the package.json,
See 8._Kea_Shop as an example


When we are creating a project with a client and server, we will open up two terminals. 
The client terminal will run with npm run dev, and the server we can use nodemon.
On our server we can install a database driver, in our case we use sqlite: npm i sqlite sqlite3